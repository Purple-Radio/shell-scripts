#!/bin/bash

# ──────────────────────────────────────────────────────────────────────
# - Automatic Show Record Script for Purple Radio - Durham
# - Designed for use with libretime radio management software
# - Built against Libretime 3.0.0-alpha.8
# - Dependencies: curl, jq, ffmpeg, sed, date
# ──────────────────────────────────────────────────────────────────────

# ──────────────────────────────────────────────────────────────────────
# - Constants
# ──────────────────────────────────────────────────────────────────────

IGNORE=("Morning" "Daytime" "Evening" "NewsBulletin")  
DIRECTORY_ROOT="ROOT DIRECTORY PATH"		
MOUNT_POINT="ICECAST MOUNT POINT PATH"

touch "$DIRECTORY_ROOT"/record.log

# ──────────────────────────────────────────────────────────────────────     
# - Core Loop
# ──────────────────────────────────────────────────────────────────────     

while true; do

    # ╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶
    # - Get Current Show Information    
    # ╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶

    current_timestamp=$(date +"%s")
    response=$(curl -s --request GET localhost/api/live-info)

    if [ -z "$(echo $response | jq -r ".currentShow[]")" ]; then

        # ╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶
        # - Edge case no upcoming shows, sleep 1 hour and try again 
        # ╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶ 

        if [ -z "$(echo $response | jq -r ".currentShow[]")" ]; then
            sleep 3600
            continue
        fi

        # ╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶
        # - Edge case dead air, sleep till next scheduled block
        # ╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶ 

        echo $(date) Empty block encountered, sleeping till end >> "$DIRECTORY_ROOT"/record.log
        target_time=$(date --date="$(echo $response | jq -r ".nextShow[].start_timestamp")" +"%s")
        sleep $(($target_time - $current_timestamp))
        continue

    else

        # ╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶
        # - More information about show
        # ╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶ 
	
        raw_title=$(echo $response | jq -r ".currentShow[].name" | sed -e "s/&amp;/and/g")
        show_title=$(echo $raw_title | sed -e "s/[^A-Za-z0-9._-]//g")
        show_end=$(date --date="$(echo $response | jq -r ".currentShow[].end_timestamp")" +"%s")
        length=$(($show_end - $current_timestamp))

        # ╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶
	    # - Check for ignored blocks, sleep till end
        # ╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶

        for i in "${IGNORE[@]}"; do
            if [ "$show_title" == "$i" ]; then
                echo $(date) Ignored block encountered, sleeping till end >> "$DIRECTORY_ROOT"/record.log
                sleep $length
                continue 2
            fi
        done

        # ╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶    
        # - If less than a minute left in show block, just sleep
        # ╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶

        if [ "$length" -lt 60 ]; then
            sleep $length
            continue
        fi

        # ╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶ 
        # - Record show to file
        # ╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶╶

        mkdir -p "$DIRECTORY_ROOT"/"$show_title"
        ls "$DIRECTORY_ROOT"/"$show_title" -1t | tail -n +5 | xargs rm -f
        filename="$DIRECTORY_ROOT"/"$show_title"/"$(date +%F-%H-%M)".ogg

        echo $(date) Valid block encountered, recording stream till end >> "$DIRECTORY_ROOT"/record.log

        ffmpeg -y -hide_banner -loglevel panic -i $MOUNT_POINT -t $length -metadata title="Show Recording - $(date +%F)" -metadata author="$raw_title" $filename 
    fi
done

